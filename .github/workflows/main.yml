name: Deploy with Docker to EC2

on:
  push:
    branches: [ "master" ] # 또는 main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install rsync on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt-get update && sudo apt-get install -y rsync

      - name: Compress and copy project files
        # 압축 파일 자기 자신을 제외하도록 --exclude 옵션 추가
        run: tar -czf project.tar.gz --exclude='project.tar.gz' .
      - uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "project.tar.gz"
          target: "/home/${{ secrets.EC2_USERNAME }}/"

      - name: Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/${{ secrets.EC2_USERNAME }}
            rm -rf app
            mkdir app
            tar -xzf project.tar.gz -C app
            
            cd app
            
            echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
            echo "DB_NAME=scopsdb" >> .env
            echo "DB_USERNAME=${{ secrets.EC2_USERNAME }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d
            docker system prune -af